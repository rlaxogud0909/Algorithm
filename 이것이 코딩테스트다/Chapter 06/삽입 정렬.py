# 삽입정렬: 특정한 데이터를 적절한 위치에 '삽입'한다는 의미

# 때문에 필요할 때만 위치를 바꾸므로 '테이터가 거의 정렬 되어 있을 때' 효율적

# 특정한 데이터가 적절한 위치에 들어가기 이전에, 그 앞까지의 데이터는 이미 정렬되어있다고 가정.
# 정렬되어 있는 데이터 리스트에서 적절한 위치를 찾은 뒤에, 그 위치에 삽입

# 삽입 정렬 소스 코드
array = [7, 5, 9, 0, 3, 1, 6, 2, 4, 8]

for i in range(1, len(array)):
    for j in range(i, 0 , -1): # 인덱스 i 부터 1까지 감소하여 반복하는 문법
        if array[j] < array[j - 1]: #한 칸씩 왼쪽으로 이동
            array[j], array[j - 1] = array[j - 1], array[j]
        else: # 자기보다 작은 데이터를 만나면 그 위치에서 멈춤
            break
    
print(array)

# 삽입 정렬의 시간복잡도
# 삽입 정령의 시간복잡도는 O(N^2)인데,
# 선택 정렬과 마찬가지로 반복문이 2번 중첩되어 사용됨

# ** 중요 **
# 여기서 꼭 기억할 내용은 삽입 정렬은 현재 리스트의 데이터가 
# 거의 정렬되어 있는 상태라면 매우 빠르게 동작한다는 점 -> 최선의 경우 O(N)의 시간복잡도
